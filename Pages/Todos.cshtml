@page "{parameter?}"
@model todo_aspnetcore.Pages.TodosModel
@{
}

<h1>This is the Todo Page</h1>
<div>
    <h2>@ViewData["Message"]</h2>

    <h4>Query: @ViewData["Query"]</h4>
    <h4>Paremter: @ViewData["Parameter"]</h4>
</div>
<form id="createTodo">
    <input type="text" asp-for="Todo.Title" placeholder="Title" id="title">
    <span asp-validation-for="Todo.Title"></span>
    <input type="text" asp-for="Todo.TodoString" placeholder="Todo" id="todo">        
    <span asp-validation-for="Todo.TodoString"></span>

    <input type="submit" >
</form>


<div id="message">msg from server</div>

<table class="table">
    <thead>
        <tr>
            <th scope="col">Todo Title</th>
        </tr>
    </thead>

    <tbody>
        
        @if (Model.Todos == null || !Model.Todos.Any()) 
        {
            <tr>
                <td>No Data</td>
            </tr>
        }
        else 
        {
            foreach(string todo in Model.Todos) 
            {
                <tr>
                    <td>@todo</td>
                </tr>
            }
        }
    </tbody>
</table>





@section scripts {
    <script>
        const form = document.querySelector("#createTodo");
        const msg = document.querySelector("#message");

        @* form.addEventListener("onSubmit", (e) => {
            e.preventDefault();
            console.log("form submitted to api")
            fetch("/api/todo/", {
                method: "POST",
                headers: {"Content-Type": "application/json"}
                body: JSON.stringify({
                    Title: document.querySelector("#title").value,
                    TodoString:  document.querySelector("#todo").value
                })
            }
            .then(res => res.json())
            .then(data => {
                msg.textContent = data;
            })
        })
        })
        JSON.stringify() *@

        form.addEventListener("submit", (e) => {
            e.preventDefault();
            console.log("form submitted to api")
            
            fetch("/api/todos/test", {
                method: "POST",
                headers: {"Content-Type": "application/json"},
                body: JSON.stringify({
                    test: "this is test data"
                })
            })
            .then(res => res.json())
            .then(data => {
                console.log(data);
                msg.textContent = JSON.stringify(data);
            })
        })


        const createTodo = () => {

        }

        
    </script>
    
}